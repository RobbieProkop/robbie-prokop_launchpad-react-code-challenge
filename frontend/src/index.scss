@import url("https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap");

$primaryColor: lightgoldenrodyellow;
$btn: rgb(212, 194, 35);
$btn-edit: green;
$btn-delete: red;
$black: #333;
$white: #fff;
$grey: rgb(175, 175, 175);
$hover: rgb(123, 195, 123);

// reset
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body,
#root {
  font-family: "Poppins", sans-serif;
  // add heigh 100vh if i want the footer to remain on the bottom
  height: 100vh;
  background-color: $black;
  background-image: url("../public/darkWoodTexture.png");
  color: $white;
  display: grid;
  grid-template-rows: auto 1fr auto;
}

//general styles
a {
  text-decoration: none;
  color: #000;
}

ul {
  list-style: none;
}

li {
  line-height: 2.2;
}

h1 {
  font-size: 1.8rem;
  padding: 1rem;
  font-weight: 600;
}

h2 {
  font-size: 2.5rem;
  font-weight: 300;

  span {
    font-size: 2rem;
  }
}

h3 {
  font-size: 1.8rem;
  font-weight: 400;
  padding-bottom: 5px;

  span {
    font-style: italic;
  }
}

h4 {
  font-size: 1rem;
  padding-bottom: 5px;
  font-weight: 300;
}

p {
  font-size: 1rem;
  padding-bottom: 5px;
}

.btn {
  padding: 10px 20px;
  border: 1px solid $btn;
  border-radius: 5px;
  background: $btn;
  color: #333;
  font-size: 16px;
  font-weight: 700;
  cursor: pointer;
  transition: all 0.3s ease-in;
  &:hover {
    background: $black;
    border: 1px solid $black;
    color: $white;
    transform: translate(0.2rem, -0.2rem);
  }
}

.btn-edit {
  padding: 5px 20px;
  background: $white;
  margin-right: 10px;
  border: 1px solid $white;
  &:hover {
    background: $black;
    border: 1px solid $black;
    color: $white;
    transform: translate(0.2rem, -0.2rem);
  }
}

.btn-delete {
  background: $black;
  color: $white;
  border: 1px solid $black;
  &:hover {
    background: $white;
    border: 1px solid $white;
    color: $black;
    transform: translate(0.2rem, -0.2rem);
  }
}

//mixins
@mixin flex-center {
  display: flex;
  justify-content: center;
  align-items: center;
}

@mixin flex-between {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

@mixin flex-end {
  display: flex;
  justify-content: flex-end;
}

//navbar
#header {
  background-color: $primaryColor;
  height: 70px;
  padding: 2rem;

  .width-container {
    @include flex-between();
    max-width: 1200px;
    margin: 0 auto;
    height: 100%;

    .logo {
      font-size: 1.3rem;
    }
  }

  .header-link {
    @include flex-center();
    a {
      padding: 10px;

      &:hover {
        color: $grey;
      }
      svg {
        margin-right: 5px;
      }
    }
  }
}

//main body
.container {
  width: 100%;
  max-width: 1200px;
  @include flex-center();
  flex-direction: column;
  margin: 0 auto !important;
  .heading {
    @include flex-center();
    flex-direction: column;
    width: 80%;
    padding: 10px;
    .search {
      @include flex-between();
      width: 100%;
      .column {
        display: flex;
        flex-direction: column;
        align-items: center;

        input,
        select {
          padding: 10px 15px;
          border-radius: 5px;
          border: none;
          margin-top: 5px;
          font-size: 1rem;
        }
        select {
          font-size: 0.8rem;
        }
        .data-result {
          margin-top: 5px;
          cursor: pointer;
          height: 12rem;
          width: 100%;
          background-color: $white;
          overflow: hidden;
          overflow-y: auto;

          .data-item {
            width: 100%;
            height: 3rem;
            display: flex;
            align-items: center;
            color: $black;
            &:hover {
              background-color: $grey;
            }
            p {
              margin-left: 1rem;
            }
          }
        }
      }
    }
    .postal {
      margin-top: 1rem;
      .column {
        align-items: unset;
        #postalNum {
          max-width: 130px;
        }
      }
    }
  }

  //home page
  .form {
    padding: 2rem;
    margin-top: 2rem;
    border-radius: 15px;
    color: $black;
    background-color: $white;
    background-image: url("../public/form-textile.png");
    width: 60%;
    .form-group {
      margin-bottom: 10px;
      label {
        font-size: 1.5rem;
        @include flex-between();

        span {
          transition: all 0.3s ease-in;
          cursor: pointer;
          &:hover {
            color: $btn;
            transform: translate(3px, -5px);
          }
        }
      }

      input,
      textarea,
      select {
        width: 100%;
        padding: 0.6rem;
        border-radius: 5px;
        border: 1px solid $black;
        margin: 10px 0;
        font-family: inherit;
        font-size: 1rem;
        resize: none;
      }
      input:focus-visible {
        outline: #000;
        border: 1px solid $black;
        box-shadow: 2px 2px 5px $grey;
      }

      .btn-block {
        width: 100%;
        margin-top: 1.2rem;
      }
    }
  }

  .content {
    @include flex-center();
    max-width: 80%;
    min-width: 80%;
    margin-top: 1.2rem;
    .posts {
      width: 100%;

      .post {
        border: 1px solid $white;
        margin: 10px 0;
        padding: 5px 10px;

        div {
          @include flex-between();
          padding-top: 5px;
        }
      }
      .postal-info {
        @include flex-between();
        padding: 1rem;
        div {
          flex-direction: column;
        }
      }
    }
  }

  //uni page
  .uni-content {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    grid-gap: 1rem;
    width: 100%;
    max-width: 1200px;
    margin-top: 2rem;
    div {
      max-width: 100%;
      height: 250px;

      // this styling isn ot ideal for lage data sets. using nth-child doesn't work as they conflict. Maybe i could use conditional statement and mixins to make this job easier. For now, I just hardcoded some spans

      &:nth-of-type(1) {
        grid-column: 1 /5;
      }
      &:nth-of-type(4) {
        grid-column: 3 / 5;
      }
      &:nth-of-type(7) {
        grid-column: 3 / 5;
      }
      &:nth-of-type(9) {
        grid-column: 2 /4;
      }
      &:nth-of-type(11) {
        grid-column: 1 /3;
      }
      &:nth-of-type(12) {
        grid-column: 3 /5;
      }
      &:nth-of-type(15) {
        grid-column: 3 /5;
      }
      &:nth-of-type(16) {
        grid-column: 1 / 5;
      }
      &:nth-of-type(19) {
        grid-column: 3 / 5;
      }
      &:nth-of-type(22) {
        grid-column: 3 / 5;
      }
      &:nth-of-type(24) {
        grid-column: 2 /4;
      }
      &:nth-of-type(26) {
        grid-column: 1 /3;
      }
      &:nth-of-type(27) {
        grid-column: 3 /5;
      }
      &:nth-of-type(30) {
        grid-column: 3 /5;
      }
      &:nth-of-type(31) {
        grid-column: 1 /5;
      }
      &:nth-of-type(32) {
        grid-column: 1 /3;
      }
      &:nth-of-type(35) {
        grid-column: 1 /3;
      }
      &:nth-of-type(40) {
        grid-column: 3 /5;
      }
      &:nth-of-type(42) {
        grid-column: 2 /4;
      }
      &:nth-of-type(52) {
        grid-column: 1 /5;
      }
    }
    a {
      max-width: 100%;
      @include flex-center();
      flex-direction: column;
      color: $white;
      cursor: pointer;
      transition: all 0.5s ease-in;

      &:hover {
        opacity: 0.6;
        transform: scale(0.98);
      }

      &.uni {
        @include flex-center();
        flex-direction: column;
        width: 100%;
        height: 250px;
      }

      // ideally bg1 and bg2 would not alternate every 3. Need to think of a better way to add the class (currently beign mapped in unitItem

      &.bg1 {
        background: url("../public/coffee-writing.jpeg");
        background-size: cover;
        background-attachment: fixed;
      }

      &.bg2 {
        background: url("../public/typerwriter.jpeg");
        background-size: cover;
        background-attachment: fixed;
      }
    }
  }
}

// loading spinner
.spinnerContainer {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: rgba(0, 0, 0, 0.5);
  z-index: 1000;
  @include flex-center();

  .spinner {
    width: 64px;
    height: 64px;
    background-image: url("../public/koala.gif");
  }
}

.return-to-top {
  @include flex-end();
  width: 100%;
  z-index: 100;
  position: fixed;
  bottom: 75px;
  right: 10px;
  button {
    border-radius: 50%;
    padding: 1rem 1.2rem;

    &:hover {
      padding: 1.1rem 1.4rem;
    }
  }
}

//footer
.footer {
  @include flex-center();
  background: $grey;
  color: $black;
  height: 70px;
  margin-top: 2rem;
}
